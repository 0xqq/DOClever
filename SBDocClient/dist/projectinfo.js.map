{"version":3,"sources":["webpack:///./web/projectinfo/projectinfo.js","webpack:///./web/projectinfo/store.js"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL,CAAC;;AAED;AACA;AACA,CAAC,C;;;;;;;;AC3RD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,WAAW;AAChD;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA,oCAAoC,qBAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qCAAqC;AACjE;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,yBAAyB;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,yBAAyB;AACnG;AACA;AACA,wCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,yBAAyB;AAClG,0EAA0E,yBAAyB;AACnG;AACA;AACA,wCAAwC,qCAAqC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;AACA,CAAC,C","file":"projectinfo.js","sourcesContent":["/**\n * Created by sunxin on 2016/12/22.\n */\nvar mainNav=require(\"../component/mainNav.vue\")\nvar interfaceList=require(\"../component/interfaceList.vue\")\nvar inParamQuery=require(\"../component/inparamQuery.vue\")\nvar inParamHeader=require(\"../component/inparamHeader.vue\")\nvar inParamBody=require(\"../component/inparamBody.vue\")\nvar outParam=require(\"../component/outParam.vue\")\nvar valueList=require(\"../component/valueList.vue\")\nvar restParam=require(\"../component/restParam.vue\")\nvar rawText=require(\"../component/rawText.vue\")\nvar inParamInject=require(\"../component/inparamInject.vue\")\nvar store=require(\"./store\")\nvar config=require(\"../util/config\")\nif(!session.get(\"id\"))\n{\n    location.href=\"../login/login.html\"\n}\nelse if(!session.get(\"projectId\"))\n{\n    location.href=\"../project/project.html\"\n}\nvar vue=new Vue({\n    el: \"#app\",\n    data: {\n        session:$.clone(session.raw()),\n        savePending:false,\n        mockUrl:config.baseUrl+\"/mock/\"+session.get(\"projectId\")\n    },\n    store:store,\n    components:{\n        \"mainnav\":mainNav,\n        \"interfacelist\":interfaceList,\n        \"inparamquery\":inParamQuery,\n        \"inparamheader\":inParamHeader,\n        \"inparambody\":inParamBody,\n        \"outparam\":outParam,\n        \"valuelist\":valueList,\n        \"restparam\":restParam,\n        \"rawtext\":rawText,\n        \"inparaminject\":inParamInject\n    },\n    watch:{\n        preview:function (val) {\n            store.commit(\"changePreview\",val);\n        },\n        \"interfaceEdit.url\":function (val) {\n            if(/http\\:\\/\\/|https\\:\\/\\//i.test(val))\n            {\n                $.tip(\"请不要在路径里面包含baseUrl\",0);\n            }\n        }\n    },\n    computed:{\n        preview:function () {\n            return store.state.preview\n        },\n        drawMix:function () {\n            return store.state.drawMix\n        },\n        interfaceEdit:function () {\n            return store.state.interfaceEdit\n        },\n        interfaceList:function () {\n            return store.state.interfaceList\n        },\n        outInfo:function () {\n            return store.state.outInfo\n        },\n        bodyInfo:function () {\n            return store.state.bodyInfo\n        },\n        param:function () {\n            return store.state.param\n        },\n        querySave:function () {\n            return store.getters.querySave\n        },\n        headerSave:function () {\n            return store.getters.headerSave\n        },\n        bodySave:function () {\n            return store.getters.bodySave\n        },\n        paramTab:function () {\n            return \"Param (\"+store.getters.paramCount+\")\";\n        },\n        queryTab:function () {\n            return \"Query (\"+store.getters.queryCount+\")\";\n        },\n        headerTab:function () {\n            return \"Header (\"+store.getters.headerCount+\")\";\n        },\n        bodyTab:function () {\n            return \"Body (\"+(store.state.bodyInfo.type==0?store.getters.bodyCount:\"Raw\")+\")\";\n        },\n        editInfo:function () {\n            return this.interfaceEdit?(this.interfaceEdit.createdAt?((this.interfaceEdit.owner?this.interfaceEdit.owner.name:\"\")+\"在\"+this.interfaceEdit.createdAt+\"创建，最近修改被\"+(this.interfaceEdit.editor?this.interfaceEdit.editor.name:\"\")+\"在\"+this.interfaceEdit.updatedAt+\"改动\"):\"接口尚未保存\"):\"\";\n        },\n        rawMock:function () {\n            return store.getters.rawMock;\n        }\n    },\n    methods:{\n        addGroup:function () {\n            $.input(\"请输入分组名称\",function (val) {\n                if(!val.value)\n                {\n                    $.tip(\"请输入分组名称\",0);\n                    return false\n                }\n                var query={};\n                query.id=session.get(\"projectId\");\n                query.name=val.value;\n                $.startHud(\"#body\");\n                store.dispatch(\"addGroup\",query).then(function (data) {\n                    $.stopHud();\n                    if(data.code==200)\n                    {\n                        $.notify(\"新建成功\",1)\n                    }\n                    else\n                    {\n                        $.notify(data.msg,0)\n                    }\n                })\n            });\n        },\n        importJSON:function () {\n            var _this=this;\n            $.inputMul(this,\"请输入JSON\",function (val) {\n                if(!val)\n                {\n                    $.tip(\"请输入JSON\",0);\n                    return false\n                }\n                var obj;\n                try\n                {\n                    obj=JSON.parse(val)\n                }\n                catch (err)\n                {\n                    $.tip(\"JSON不符合格式\",0);\n                    return false\n                }\n                store.commit(\"importResult\",obj);\n                return true;\n            });\n        },\n        importQuery:function () {\n            var _this=this;\n            $.inputMul(this,\"请输入Query字符串，比如:name=sx&pwd=111\",function (val) {\n                if(!val)\n                {\n                    $.tip(\"请输入Query字符串\",0);\n                    return false\n                }\n                store.commit(\"importQuery\",val);\n                return true;\n            });\n        },\n        importHeader:function () {\n            var _this=this;\n            $.inputMul(this,\"请输入HTTP Header字符串，以回车分割，比如:\\nRequest Method:GET\\nStatus Code:200\",function (val) {\n                if(!val)\n                {\n                    $.tip(\"请输入HTTP Header字符串\",0);\n                    return false\n                }\n                store.commit(\"importHeader\",val);\n                return true;\n            });\n        },\n        importBody:function () {\n            var _this=this;\n            $.inputMul(this,\"请输入Body Key-Value字符串,文件类型的值用[FILE]代替,比如:name=sx&pwd=111&file=[FILE]\",function (val) {\n                if(!val)\n                {\n                    $.tip(\"请输入Body Key-Value字符串\",0);\n                    return false\n                }\n                store.commit(\"importBody\",val);\n                return true;\n            });\n        },\n        changeMethod:function () {\n            store.commit(\"changeMethod\");\n        },\n        save:function () {\n            if(!this.interfaceEdit.name)\n            {\n                $.tip(\"请填入接口名称\",0);\n                return;\n            }\n            else if(!this.interfaceEdit.url)\n            {\n                $.tip(\"请填入接口地址\",0);\n                return;\n            }\n            this.savePending=true;\n            var _this=this;\n            store.dispatch(\"save\").then(function (data) {\n                _this.savePending=false;\n                if(data.code==200)\n                {\n                    $.notify(\"保存成功\",1)\n                }\n                else\n                {\n                    $.notify(data.msg,0)\n                }\n            })\n        },\n        changeUrl:function (val) {\n            store.commit(\"changeUrl\",val);\n        },\n        changePreview:function (val) {\n            store.commit(\"setPreview\",val);\n        },\n        run:function () {\n            if(!this.interfaceEdit._id)\n            {\n                $.tip(\"请先保存接口！\",0);\n                return;\n            }\n            session.set(\"interfaceId\",this.interfaceEdit._id);\n            session.set(\"groupId\",this.interfaceEdit.group._id);\n            window.open(\"../run/run.html\",\"_blank\");\n        },\n        methodColor:function (val) {\n            return helper.methodColor(val);\n        },\n        paste:function () {\n            setTimeout(function () {\n                var path=store.state.interfaceEdit.url;\n                var arrStoreQuery=store.state.query;\n                arrStoreQuery.splice(0,arrStoreQuery.length);\n                var index=path.indexOf(\"?\");\n                if(index>-1)\n                {\n                    var arr=path.split(\"?\");\n                    if(arr[1])\n                    {\n                        var query=arr[1];\n                        var arrQuery=query.split(\"&\");\n                        for(var i=0;i<arrQuery.length;i++)\n                        {\n                            if(arrQuery[i])\n                            {\n                                var arrQuery1=arrQuery[i].split(\"=\");\n                                arrStoreQuery.push({\n                                    name:arrQuery1[0],\n                                    value:arrQuery1[1]?[decodeURIComponent(arrQuery1[1])]:[],\n                                    must:1,\n                                    remark:\"\"\n                                })\n                            }\n                        }\n                    }\n                    store.state.interfaceEdit.url=store.state.interfaceEdit.url.substring(0,index);\n                }\n                else\n                {\n                    arrStoreQuery.push({\n                        name:\"\",\n                        must:0,\n                        remark:\"\"\n                    })\n                }\n            },100)\n        }\n    },\n    created:function () {\n        store.dispatch(\"getAllInterface\").then(function () {\n            $.stopLoading();\n        })\n    },\n})\n\n$.ready(function () {\n    $.startLoading();\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./web/projectinfo/projectinfo.js\n// module id = 124\n// module chunks = 1","/**\n * Created by sunxin on 2017/2/23.\n */\nmodule.exports=new Vuex.Store({\n    state:{\n        interfaceList:[],\n        interface:null,\n        interfaceEdit:null,\n        query:[{\n            name:\"\",\n            must:0,\n            remark:\"\"\n        }],\n        header:[{\n            name:\"\",\n            value:\"\",\n            remark:\"\"\n        }],\n        body:[{\n            name:\"\",\n            type:0,\n            must:0,\n            remark:\"\",\n        }],\n        param:[\n\n        ],\n        bodyInfo:{\n            type:0,\n            rawType:0,\n            rawTextRemark:\"\",\n            rawFileRemark:\"\",\n            rawText:\"\",\n        },\n        outInfo:{\n            type:0,\n            rawRemark:\"\",\n            rawMock:\"\",\n        },\n        result:[\n            {\n                name:\"\",\n                must:0,\n                type:0,\n                remark:\"\",\n                show:0,\n                mock:\"\",\n                drag:1\n            }\n        ],\n        preview:\"\",\n        drawMix:[],\n        objCopy:null\n    },\n    getters:{\n        querySave:function (state,getters) {\n            return state.query.filter(function (obj) {\n                if(obj.name)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            })\n        },\n        headerSave:function (state,getters) {\n            return state.header.filter(function (obj) {\n                if(obj.name)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            });\n        },\n        bodySave:function (state,getters) {\n            return state.body.filter(function (obj) {\n                if(obj.name)\n                {\n                    return true\n                }\n                else\n                {\n                    return false\n                }\n            })\n        },\n        queryCount:function (state,getters) {\n            return getters.querySave.length\n        },\n        headerCount:function (state,getters) {\n            return getters.headerSave.length\n        },\n        bodyCount:function (state,getters) {\n            return getters.bodySave.length\n        },\n        paramCount:function (state,getters) {\n            return state.param.length;\n        },\n        rawMock:function (state) {\n            return helper.mock(state.outInfo.rawMock);\n        }\n    },\n    mutations:{\n        initInterfaceList:function (state,data) {\n            var arr=[]\n            for(var i=0;i<data.length;i++)\n            {\n                data[i].show=0;\n                for(var j=0;j<data[i].data.length;j++)\n                {\n                    data[i].data[j].select=0;\n                }\n                arr.push(data[i]);\n            }\n            state.interfaceList=arr;\n        },\n        setPreview:function (state,data) {\n            state.preview=data;\n        },\n        setDrawMix:function (state,data) {\n            state.drawMix=data;\n        },\n        setInterface:function (state,data) {\n            state.interface=data;\n        },\n        setInterfaceEdit:function (state,data) {\n            state.interfaceEdit=data;\n        },\n        setInterfaceList:function (state,data) {\n            state.interfaceList=data;\n        },\n        setObjCopy:function (state,data) {\n            state.objCopy=data;\n        },\n        initParam:function (state,data) {\n            state.query.splice(0,state.query.length);\n            state.header.splice(0,state.header.length);\n            state.body.splice(0,state.body.length);\n            state.result.splice(0,state.result.length);\n            state.param.splice(0,state.param.length);\n            state.query.push({\n                name:\"\",\n                must:0,\n                remark:\"\"\n            });\n            state.header.push({\n                name:\"\",\n                value:\"\",\n                remark:\"\"\n            });\n            state.body.push({\n                name:\"\",\n                type:0,\n                must:0,\n                remark:\"\",\n            });\n            state.result.push({\n                name:\"\",\n                must:1,\n                type:0,\n                remark:\"\",\n                show:1,\n                drag:1,\n                mock:\"\"\n            })\n            state.bodyInfo={\n                type:0,\n                rawType:0,\n                rawTextRemark:\"\",\n                rawFileRemark:\"\",\n                rawText:\"\",\n            };\n            state.outInfo={\n                type:0,\n                rawRemark:\"\",\n                rawMock:\"\",\n            }\n        },\n        initInterface:function (state,data) {\n            if(state.interfaceEdit.queryParam.length>0)\n            {\n                state.query=state.interfaceEdit.queryParam;\n            }\n            if(state.interfaceEdit.bodyParam.length>0)\n            {\n                state.body=state.interfaceEdit.bodyParam;\n            }\n            if(state.interfaceEdit.header.length>0)\n            {\n                state.header=state.interfaceEdit.header;\n            }\n            if(state.interfaceEdit.outParam.length>0)\n            {\n                helper.initResultShow(state.interfaceEdit.outParam);\n                state.result=state.interfaceEdit.outParam;\n            }\n            if(state.interfaceEdit.restParam.length>0)\n            {\n                state.param=state.interfaceEdit.restParam;\n            }\n            if(state.interfaceEdit.bodyInfo)\n            {\n                state.bodyInfo=state.interfaceEdit.bodyInfo;\n                if(state.bodyInfo.rawText===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawText\",\"\");\n                }\n                if(state.bodyInfo.rawTextRemark===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawTextRemark\",\"\");\n                }\n                if(state.bodyInfo.rawFileRemark===undefined)\n                {\n                    Vue.set(state.bodyInfo,\"rawFileRemark\",\"\");\n                }\n            }\n            if(state.interfaceEdit.outInfo)\n            {\n                state.outInfo=state.interfaceEdit.outInfo;\n            }\n        },\n        moveInterface:function (state,id) {\n            if(state.interfaceEdit)\n            {\n                state.interfaceEdit.group._id=id;\n            }\n        },\n        importResult:function (state,obj) {\n            var result=[];\n            for(var key in obj)\n            {\n                helper.handleResultData(key,obj[key],result,null,1)\n            }\n            state.result=result;\n        },\n        importQuery:function (state,val) {\n            var str=decodeURI($.trim(val));\n            var arr=[];\n            var param1=str.split(\"&\");\n            for(var i=0;i<param1.length;i++)\n            {\n                var param2=param1[i].split(\"=\");\n                if(param2.length>0)\n                {\n                    arr.push({\n                        name:param2[0],\n                        must:1,\n                        remark:\"\",\n                        value:param2[1]?[decodeURIComponent(param2[1])]:[],\n                    })\n                }\n            }\n            state.query=arr;\n        },\n        importHeader:function (state,val) {\n            var arr=$.trim(val).split(\"\\n\");\n            var arrHeader=[];\n            for(var i=0;i<arr.length;i++)\n            {\n                var line=$.trim(arr[i]);\n                var index=line.indexOf(\":\");\n                var key=\"\",value=\"\";\n                if(index==-1)\n                {\n                    key=line;\n                }\n                else\n                {\n                    key=$.trim(line.substr(0,index));\n                    value=$.trim(line.substr(index+1));\n                }\n                if(key)\n                {\n                    arrHeader.push({\n                        name:key,\n                        value:value,\n                        remark:\"\",\n                    })\n                }\n            }\n            if(arrHeader.length==0)\n            {\n                arrHeader.push({\n                    name:\"\",\n                    value:\"\",\n                    remark:\"\"\n                })\n            }\n            state.header=arrHeader;\n        },\n        importBody:function (state,val) {\n            var str=decodeURI($.trim(val));\n            var arr=[];\n            var param1=str.split(\"&\");\n            for(var i=0;i<param1.length;i++)\n            {\n                var param2=param1[i].split(\"=\");\n                if(param2.length>0)\n                {\n                    arr.push({\n                        name:param2[0],\n                        type:param2[1]==\"[FILE]\"?1:0,\n                        must:1,\n                        remark:\"\",\n                        value:(param2[1]!=\"[FILE]\")?(param2[1]?[decodeURIComponent(param2[1])]:[]):[],\n                    })\n                }\n            }\n            state.body=arr;\n        },\n        changeMethod:function (state) {\n            if(state.interfaceEdit.method==\"POST\" || state.interfaceEdit.method==\"PUT\")\n            {\n                if(state.header.length==1 && !state.header[0].name)\n                {\n                    state.header[0].name=\"Content-Type\";\n                    state.header[0].value=\"application/x-www-form-urlencoded\"\n                }\n                else\n                {\n                    var bFind=false;\n                    for(var i=0;i<state.header.length;i++)\n                    {\n                        var obj=state.header[i];\n                        if(obj.name==\"Content-Type\")\n                        {\n                            bFind=true;\n                            break;\n                        }\n                    }\n                    if(!bFind)\n                    {\n                        state.header.push({\n                            name:\"Content-Type\",\n                            value:\"application/x-www-form-urlencoded\",\n                            remark:\"\"\n                        })\n                    }\n                }\n            }\n            else\n            {\n                for(var i=0;i<state.header.length;i++)\n                {\n                    var obj=state.header[i];\n                    if(obj.name==\"Content-Type\")\n                    {\n                        if(state.header.length>1)\n                        {\n                            state.header.splice(i,1);\n                        }\n                        else\n                        {\n                            state.header[0].name=\"\";\n                            state.header[0].value=\"\";\n                            state.header[0].remark=\"\";\n                        }\n                        break;\n                    }\n                }\n            }\n        },\n        changeUrl:function (state,val) {\n            if(val)\n            {\n                var arrParam=[];\n                var arr=val.match(/\\{([^\\s]+?)\\}/g);\n                if(arr)\n                {\n                    for(var i=0;i<arr.length;i++)\n                    {\n                        var str=arr[i].substr(1,arr[i].length-2);\n                        var bFind=false;\n                        for(var j=0;j<state.param.length;j++)\n                        {\n                            if(str==state.param[j].name)\n                            {\n                                bFind=true;\n                                arrParam.push(state.param[j]);\n                                break;\n                            }\n                        }\n                        if(!bFind)\n                        {\n                            arrParam.push({\n                                name:str,\n                                remark:\"\",\n                                value:[]\n                            })\n                        }\n                    }\n                }\n                state.param=arrParam;\n            }\n        },\n        changePreview:function (state,val) {\n            if(val==1 && session.get(\"role\")==0)\n            {\n                var obj={};\n                var result=helper.resultSave(state.result);\n                helper.convertToJSON(result,obj);\n                state.drawMix=helper.format(JSON.stringify(obj),1,result).draw;\n            }\n        }\n    },\n    actions:{\n        add:function (context,data) {\n            if(context.state.interface)\n            {\n                context.state.interface.select=0;\n            }\n            context.commit(\"initParam\");\n            context.commit(\"setInterface\",null);\n            if(data.item)\n            {\n                context.commit(\"setInterfaceEdit\",data.item);\n                context.commit(\"initInterface\");\n\n            }\n            else\n            {\n                context.commit(\"setInterfaceEdit\",{\n                    \"name\": \"\",\n                    \"group\": {\n                        \"_id\": data.id,\n                    },\n                    \"url\": \"\",\n                    \"remark\": \"\",\n                    \"method\": \"GET\",\n                    \"finish\":0,\n                    \"outParam\": [],\n                    \"bodyParam\": [],\n                    \"queryParam\": [],\n                    \"header\": [],\n                    \"bodyInfo\":{\n                        type:0,\n                        rawType:0,\n                        rawTextRemark:\"\",\n                        rawFileRemark:\"\",\n                        rawText:\"\",\n                    },\n                    outInfo:{\n                        type:0,\n                        rawRemark:\"\",\n                        rawMock:\"\"\n                    },\n                    restParam:[],\n                    before:\"\",\n                    after:\"\"\n                });\n            }\n\n        },\n        getAllInterface:function (context) {\n            return net.get(\"/project/interface\",{\n                id:session.get(\"projectId\")\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.commit(\"initInterfaceList\",data.data);\n                    if(session.get(\"newInterface\"))\n                    {\n                        var objInterface=JSON.parse(session.get(\"newInterface\"));\n                        if(objInterface._id)\n                        {\n                            for(var i=0;i<context.state.interfaceList.length;i++)\n                            {\n                                var obj=context.state.interfaceList[i];\n                                var bBreak=false;\n                                for(var j=0;j<obj.data.length;j++)\n                                {\n                                    var obj1=obj.data[j];\n                                    if(obj1._id==objInterface._id)\n                                    {\n                                        obj.show=1;\n                                        context.commit(\"setInterface\",obj1);\n                                        obj1.select=1;\n                                        context.commit(\"setInterfaceEdit\",objInterface);\n                                        bBreak=true;\n                                        break;\n                                    }\n                                }\n                                if(bBreak)\n                                {\n                                    break;\n                                }\n                            }\n                            context.commit(\"initParam\");\n                            if(context.state.interface)\n                            {\n                                context.commit(\"initInterface\")\n                            }\n                            else\n                            {\n                                context.commit(\"setInterfaceEdit\",null);\n                            }\n                        }\n                        else\n                        {\n                            context.dispatch(\"add\",{\n                                id:objInterface.group._id,\n                                item:objInterface\n                            });\n                        }\n                        session.remove(\"newInterface\");\n                    }\n                }\n                else\n                {\n                    setTimeout(function () {\n                        window.close();\n                    },1200)\n                }\n            })\n        },\n        refreshData:function (context,data) {\n            context.commit(\"setInterfaceList\",helper.refreshInterface(context.state.interfaceList,data));\n            if(context.state.interface)\n            {\n                context.state.interface.select=0;\n            }\n            context.commit(\"setInterface\",null);\n            context.commit(\"setInterfaceEdit\",null);\n        },\n        refresh:function (context) {\n            return net.get(\"/project/interface\",{\n                id:session.get(\"projectId\")\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        renameGroup:function (context,data) {\n            return net.post(\"/group/create\",data,{\n                \"content-type\":\"application/x-www-form-urlencoded\"\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        removeGroup:function (context,data) {\n            return net.delete(\"/group/item\",data).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        clear:function (context) {\n            return net.delete(\"/project/clear\",{\n                id:session.get(\"projectId\"),\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        removeInterface:function (context,data) {\n            return net.delete(\"/interface/item\",{\n                id:data\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        destroyInterface:function (context,data) {\n            return net.delete(\"/interface/destroyitem\",{\n                id:data\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.dispatch(\"refreshData\",data.data);\n                }\n                return data;\n            })\n        },\n        info:function (context,obj) {\n            var itemData;\n            return net.get(\"/interface/item\",{\n                id:obj.item1._id,\n                group:obj.item._id\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    obj.item1.name=data.data.name;\n                    obj.item1.method=data.data.method;\n                    itemData=data.data;\n                    if(data.data.change)\n                    {\n                        return net.get(\"/project/interface\",{\n                            id:session.get(\"projectId\")\n                        }).then(function (data) {\n                            if(data.code==200)\n                            {\n                                context.dispatch(\"refreshData\",data.data);\n                                context.dispatch(\"showInfo\",{\n                                    data:itemData._id,\n                                    data1:itemData\n                                });\n                            }\n                            return data;\n                        })\n                    }\n                    else\n                    {\n                       context.dispatch(\"showInfo\",{\n                           data:data.data,\n                           data1:obj.item1\n                       });\n                    }\n                }\n                else\n                {\n                    item.splice(obj.index,1);\n                    context.dispatch(\"showInfo\",{\n                        data:null,\n                        data1:null\n                    });\n                }\n                return data;\n            })\n        },\n        showInfo:function (context,data) {\n            if(context.state.interface)\n            {\n                context.state.interface.select=0;\n            }\n            if(data.data==null)\n            {\n                context.commit(\"setInterface\",null);\n            }\n            else if(typeof(data.data)==\"string\")\n            {\n                for(var i=0;i<context.state.interfaceList.length;i++)\n                {\n                    var obj=context.state.interfaceList[i];\n                    var bBreak=false;\n                    for(var j=0;j<obj.data.length;j++)\n                    {\n                        var obj1=obj.data[j];\n                        if(obj1._id==data.data)\n                        {\n                            obj.show=1;\n                            context.commit(\"setInterface\",obj1);\n                            obj1.select=1;\n                            context.commit(\"setInterfaceEdit\",data.data1);\n                            bBreak=true;\n                            break;\n                        }\n                    }\n                    if(bBreak)\n                    {\n                        break;\n                    }\n                }\n            }\n            else\n            {\n                context.commit(\"setInterface\",data.data1);\n                context.state.interface.select=1;\n                context.commit(\"setInterfaceEdit\",data.data);\n            }\n            context.commit(\"initParam\");\n            if(context.state.interface)\n            {\n                context.commit(\"initInterface\");\n            }\n            else\n            {\n                context.commit(\"setInterfaceEdit\",null);\n            }\n            if(session.get(\"role\")==0)\n            {\n                context.commit(\"setPreview\",0);\n            }\n            else\n            {\n                context.commit(\"setPreview\",1);\n                var obj={};\n                var result=helper.resultSave(context.state.result);\n                helper.convertToJSON(result,obj);\n                context.commit(\"setDrawMix\",helper.format(JSON.stringify(obj),1,result).draw);\n            }\n        },\n        move:function (context,obj) {\n            return net.put(\"/interface/move\",{\n                id:obj.obj.id,\n                group:obj.group._id\n            },{\n                \"content-type\":\"application/x-www-form-urlencoded\"\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    obj.group.show=1;\n                    for(var i=0;i<context.state.interfaceList.length;i++)\n                    {\n                        var o=context.state.interfaceList[i];\n                        if(o._id==obj.obj.group)\n                        {\n                            var objSplice=o.data[obj.obj.index];\n                            if(objSplice.select)\n                            {\n                                context.commit(\"moveInterface\",obj.group._id);\n                            }\n                            o.data.splice(obj.obj.index,1);\n                            obj.group.data.push(objSplice);\n                            break;\n                        }\n                    }\n                }\n                return data;\n            })\n        },\n        addGroup:function (context,query) {\n            return net.post(\"/group/create\",query,{\n                \"content-type\":\"application/x-www-form-urlencoded\"\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    context.commit(\"initInterfaceList\",data.data);\n                }\n                return data;\n            })\n        },\n        save:function (context) {\n            var obj={\n                name:context.state.interfaceEdit.name,\n                url:context.state.interfaceEdit.url,\n                group:context.state.interfaceEdit.group._id,\n                remark:context.state.interfaceEdit.remark,\n                project:session.get(\"projectId\"),\n                method:context.state.interfaceEdit.method,\n                finish:context.state.interfaceEdit.finish,\n                before:context.state.interfaceEdit.before,\n                after:context.state.interfaceEdit.after,\n            }\n            if(context.state.interfaceEdit._id)\n            {\n                obj.id=context.state.interfaceEdit._id\n            }\n            obj.header=JSON.stringify(context.getters.headerSave);\n            obj.queryparam=JSON.stringify(context.getters.querySave);\n            if(context.state.interfaceEdit.method==\"POST\" || context.state.interfaceEdit.method==\"PUT\")\n            {\n                if(context.state.bodyInfo.type==0)\n                {\n                    obj.bodyparam=JSON.stringify(context.getters.bodySave);\n                }\n                else\n                {\n                    obj.bodyparam=\"[]\";\n                }\n                var bodyInfo=$.clone(context.state.bodyInfo);\n                if(bodyInfo.type==1)\n                {\n                    if(bodyInfo.rawType==0)\n                    {\n                        bodyInfo.rawFileRemark=\"\";\n                    }\n                    else\n                    {\n                        bodyInfo.rawText=\"\";\n                        bodyInfo.rawTextRemark=\"\";\n                    }\n                }\n                obj.bodyinfo=JSON.stringify(bodyInfo)\n            }\n            if(context.state.outInfo.type==0)\n            {\n                obj.outparam=JSON.stringify(helper.resultSave(context.state.result));\n                var outInfo=$.clone(context.state.outInfo);\n                outInfo.rawRemark=\"\";\n                outInfo.rawMock=\"\";\n                obj.outinfo=JSON.stringify(outInfo)\n            }\n            else\n            {\n                obj.outparam=\"[]\";\n                obj.outinfo=JSON.stringify(context.state.outInfo)\n            }\n            obj.restparam=JSON.stringify(context.state.param)\n            return net.post(\"/interface/create\",obj,{\n                \"content-type\":\"application/x-www-form-urlencoded\"\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    if(typeof(data.data)==\"string\")\n                    {\n                        context.state.interface.name=context.state.interfaceEdit.name;\n                        context.state.interface.method=context.state.interfaceEdit.method;\n                        Vue.set(context.state.interfaceEdit,\"editor\",{name:session.get(\"name\")});\n                        Vue.set(context.state.interfaceEdit,\"updatedAt\",$.getNowFormatDate(\"yyyy-MM-dd hh:mm:ss\"))\n                    }\n                    else\n                    {\n                        if(data.data instanceof Array)\n                        {\n                            Vue.set(context.state.interfaceEdit,\"editor\",{name:session.get(\"name\")});\n                            Vue.set(context.state.interfaceEdit,\"updatedAt\",$.getNowFormatDate(\"yyyy-MM-dd hh:mm:ss\"))\n                            context.state.interfaceList=helper.refreshInterface(context.state.interfaceList,data.data);\n                            for(var i=0;i<context.state.interfaceList.length;i++)\n                            {\n                                var obj=context.state.interfaceList[i];\n                                var bBreak=false;\n                                for(var j=0;j<obj.data.length;j++)\n                                {\n                                    var obj1=obj.data[j];\n                                    if(obj1._id==context.state.interfaceEdit._id)\n                                    {\n                                        obj.show=1;\n                                        context.state.interface=obj1;\n                                        obj1.select=1;\n                                        bBreak=true;\n                                        break;\n                                    }\n                                }\n                                if(bBreak)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                        else\n                        {\n                            context.state.interfaceEdit._id=data.data._id;\n                            Vue.set(context.state.interfaceEdit,\"owner\",{name:session.get(\"name\")});\n                            Vue.set(context.state.interfaceEdit,\"editor\",{name:session.get(\"name\")});\n                            Vue.set(context.state.interfaceEdit,\"createdAt\",data.data.createdAt);\n                            Vue.set(context.state.interfaceEdit,\"updatedAt\",data.data.updatedAt);\n                            for(var i=0;i<context.state.interfaceList.length;i++)\n                            {\n                                var obj=context.state.interfaceList[i];\n                                if(obj._id==context.state.interfaceEdit.group._id)\n                                {\n                                    var o={\n                                        _id:data.data._id,\n                                        name:data.data.name,\n                                        method:data.data.method,\n                                        select:1\n                                    }\n                                    obj.data.push(o)\n                                    obj.show=1;\n                                    context.state.interface=o;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                return data;\n            })\n        },\n        copy:function (context,data) {\n            return net.get(\"/interface/item\",{\n                id:data.item1._id,\n                group:data.item._id\n            }).then(function (data) {\n                if(data.code==200)\n                {\n                    var method=data.data.method;\n                    var url=$.trim(data.data.url);\n                    var name=$.trim(data.data.name)+\"(副本)\";\n                    var param=data.data.restParam;\n                    var query=data.data.queryParam;\n                    var header=data.data.header;\n                    var body=data.data.bodyParam;\n                    var result=data.data.outParam;\n                    var outInfo=data.data.outInfo;\n                    var obj={\n                        method:method,\n                        url:url,\n                        queryParam:query,\n                        header:header,\n                        bodyParam:body,\n                        outParam:result,\n                        restParam:param,\n                        group:{\n                            _id:data.data.group._id\n                        },\n                        name:name,\n                        remark:data.data.remark,\n                        owner:\"\",\n                        editor:\"\",\n                        createdAt:\"\",\n                        updatedAt:\"\",\n                        finish:0,\n                        outInfo:outInfo,\n                        before:data.data.before,\n                        after:data.data.after\n                    }\n                    if(method==\"POST\" || method==\"PUT\")\n                    {\n                        obj.bodyInfo=data.data.bodyInfo;\n                    }\n                    context.state.objCopy=obj;\n                }\n                return data;\n            })\n\n        },\n    }\n})\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./web/projectinfo/store.js\n// module id = 41\n// module chunks = 1"],"sourceRoot":""}